#include <stdio.h>

// Nested structure to store type details of the friend
struct Type {
    char typeOfFriend[20];       // School, College, or Area friend
    char commonFriends[100];     // Names of common friends
    int placesVisited;           // Number of places visited together
};

// Main structure to store friend details
struct Friends {
    char name[50];               // Name of the friend
    char petName[50];            // Pet name of the friend
    char phoneNumber[15];        // Phone number of the friend
    struct Type friendType;      // Nested structure
};

int main() {
    int n;
    
    printf("Enter the number of friends to add: ");
    scanf("%d", &n);
    
    struct Friends friends[n];   // Array to store data for 'n' friends

    // Input data for 'n' friends
    for(int i = 0; i < n; i++) {
        printf("\nEnter details for Friend %d\n", i+1);

        printf("Enter Friend Name: ");
        scanf(" %[^\n]%*c", friends[i].name);

        printf("Enter Pet Name: ");
        scanf(" %[^\n]%*c", friends[i].petName);

        printf("Enter Phone Number: ");
        scanf(" %[^\n]%*c", friends[i].phoneNumber);

        printf("Enter Type of Friend (School, College, Area): ");
        scanf(" %[^\n]%*c", friends[i].friendType.typeOfFriend);

        printf("Enter Name of Common Friends: ");
        scanf(" %[^\n]%*c", friends[i].friendType.commonFriends);

        printf("Enter No. of Places Visited Together: ");
        scanf("%d", &friends[i].friendType.placesVisited);
    }

    // Display the details of the friends
    printf("\nFriends List:\n");
    printf("S.No.  Name            Pet Name   Phone Number    Type of Friend    Name of Common Friends            No. of Places Visited\n");
    printf("---------------------------------------------------------------------------------------------------------------\n");

    for(int i = 0; i < n; i++) {
        printf("%-6d %-15s %-10s %-15s %-15s %-30s %d\n",
               i+1,
               friends[i].name,
               friends[i].petName,
               friends[i].phoneNumber,
               friends[i].friendType.typeOfFriend,
               friends[i].friendType.commonFriends,
               friends[i].friendType.placesVisited);
    }

    return 0;
}
